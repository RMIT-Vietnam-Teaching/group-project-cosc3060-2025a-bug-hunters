<!-- Sort and Add Button Row -->
<div class="container mt-4 mb-3">
  <div class="d-flex justify-content-between align-items-center">
    <div class="dropdown">
      <button class="btn btn-light border rounded-pill px-4 py-2 fw-medium shadow-sm d-flex align-items-center gap-2"
              type="button" data-bs-toggle="dropdown" aria-expanded="false" style="font-size: 15px;">
        <i class="bi bi-arrow-down-up"></i>
        Sort by
      </button>
      <ul class="dropdown-menu rounded-4 shadow-sm">
        <li><a class="dropdown-item sort-option" data-sort="title">üìò Title (A-Z)</a></li>
        <li><a class="dropdown-item sort-option" data-sort="date">üìÖ Last Updated</a></li>
        <li><a class="dropdown-item sort-option" data-sort="students">üë• Student Count</a></li>
        <li><a class="dropdown-item sort-option" data-sort="rating">‚≠ê Rating</a></li>
      </ul>
    </div>
    <button class="btn-orange-outline" data-bs-toggle="modal" data-bs-target="#addCourseModal">
      <i class="bi bi-plus-circle"></i> Add Course
    </button>        
  </div>
</div>

<!-- Course Cards -->
<div class="container px-4">
  <div class="list-group">
    <% courses.forEach(course => { %>
      <div class="list-group-item bg-white border-0 rounded-4 shadow-sm mb-4 px-4 py-4">
        <div class="d-flex flex-wrap align-items-center justify-content-between">
          <div class="d-flex align-items-center gap-3">
            <div style="width: 60px; height: 60px; background: #e9ecef; border-radius: 12px;"></div>
            <div>
              <strong class="fs-5"><%= course.name %></strong>
              <div class="small text-muted mt-1">
                By <%= course.author?.firstName || 'N/A' %> ‚Ä¢ Updated: <%= course.dateCreated?.toDateString() %><br>
                ‚≠ê <%= course.rating %> Reviews &nbsp;|&nbsp; üë• <%= course.studentsEnrolled?.length || 0 %> Students
              </div>
            </div>
          </div>
          <div class="d-flex gap-2 mt-3 mt-md-0">
            <a href="/institution/editCourse/<%= course._id %>?returnTo=/institution/manageCourses" class="btn btn-outline-danger btn-sm">Edit</a>
            <form action="/institution/deleteInstitutionCourses/<%= course._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this course?')">
              <button class="btn btn-sm btn-outline-danger">Delete</button>
            </form>
            <a href="/institution/viewCourse/<%= course._id %>" class="btn btn-sm btn-outline-secondary">View</a>
          </div>
        </div>
      </div>
    <% }) %>
  </div>
</div>

<!-- Add Course Modal -->
<div class="modal fade" id="addCourseModal" tabindex="-1" aria-labelledby="addCourseModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <form id="createCourseForm" action="/institution/createCourse" method="POST" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCourseModalLabel">Create New Course</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row mb-3">
          <div class="col-md-6">
            <label class="form-label">Course Title</label>
            <input type="text" name="title" class="form-control" required />
          </div>
          <div class="col-md-6">
            <label class="form-label">Price</label>
            <input type="number" name="price" class="form-control" required />
          </div>
        </div>
        <div class="mb-3">
          <label class="form-label">Description</label>
          <textarea name="description" class="form-control" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label class="form-label">Instructor</label>
          <select name="instructor" class="form-select" required>
            <option value="">Select Tutor</option>
            <% instructors.forEach(tutor => { %>
              <option value="<%= tutor._id %>"><%= tutor.firstName %> <%= tutor.lastName %></option>
            <% }) %>
          </select>
        </div>
        <hr />
        <div class="mb-3">
          <label class="form-label text-orange fw-semibold">Add Student to Course</label>
          <div class="d-flex gap-2">
            <select id="studentSelector" class="form-select">
              <% students.forEach(stu => { %>
                <option value="<%= stu._id %>" data-email="<%= stu.email %>">
                  <%= stu.firstName %> <%= stu.lastName %> - <%= stu.email %>
                </option>
              <% }) %>
            </select>
            <button type="button" class="btn btn-orange" onclick="addStudent()">Add</button>
          </div>
        </div>
        <div class="mt-4">
          <h6>Enrolled Students</h6>
          <table class="table table-bordered mt-2" id="enrolledTable">
            <thead>
              <tr>
                <th>#</th>
                <th>Name</th>
                <th>Email</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody id="studentList"></tbody>
          </table>
        </div>
        <input type="hidden" name="studentsEnrolled" id="studentsEnrolledInput" />
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-orange">Create Course</button>
      </div>
    </form>
  </div>
</div>
<style>
  .text-orange {
    color: #ff7a00;
  }

  .btn-orange {
    background-color: #e07b4f;
    color: white;
    border: none;
  }

  .btn-orange-outline {
    border: 2px solid #e07b4f;
    background-color: white;
    color: #e07b4f;
    border-radius: 50px;
    padding: 8px 20px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    transition: all 0.2s ease;
  }
  
    .btn-orange-outline:hover {
      background-color: #e07b4f;
      color: white;
    }
  
    .btn-orange-outline i {
      font-size: 16px;
    }
  .btn-orange:hover {
    background-color: #cf6e44;
    color: white;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const courseList = document.querySelector(".list-group");
    const getValue = (card, key) => {
      if (key === "title") return card.querySelector("strong")?.textContent.trim().toLowerCase();
      if (key === "date") {
        const match = card.querySelector(".text-muted")?.textContent.match(/\d{4}\/\d{2}\/\d{2}/);
        return new Date(match ? match[0] : null);
      }
      if (key === "students") return parseInt(card.innerText.match(/üë•\s*(\d+)/)?.[1]) || 0;
      if (key === "rating") return parseFloat(card.innerText.match(/‚≠ê\s*(\d+(\.\d+)?)/)?.[1]) || 0;
      return "";
    };
    const sortCards = (key) => {
      const cards = Array.from(courseList.querySelectorAll(".list-group-item"));
      cards.sort((a, b) => {
        const valA = getValue(a, key);
        const valB = getValue(b, key);
        return typeof valA === "string" ? valA.localeCompare(valB) : valB - valA;
      });
      courseList.innerHTML = "";
      cards.forEach(card => courseList.appendChild(card));
    };
    document.querySelectorAll(".sort-option").forEach(item => {
      item.addEventListener("click", () => {
        const sortKey = item.dataset.sort;
        sortCards(sortKey);
      });
    });
  });

  const studentList = [];
  const studentMap = {};
  <% students.forEach(stu => { %>
    studentMap["<%= stu._id %>"] = {
      id: "<%= stu._id %>",
      name: "<%= stu.firstName %> <%= stu.lastName %>",
      email: "<%= stu.email %>"
    };
  <% }); %>

  function addStudent() {
    const selector = document.getElementById("studentSelector");
    const studentId = selector.value;
    if (!studentId || studentList.includes(studentId)) return;
    studentList.push(studentId);
    updateStudentTable();
    updateHiddenInput();
  }

  function removeStudent(id) {
    const index = studentList.indexOf(id);
    if (index > -1) studentList.splice(index, 1);
    updateStudentTable();
    updateHiddenInput();
  }

  function updateStudentTable() {
    const tableBody = document.getElementById("studentList");
    tableBody.innerHTML = "";
    studentList.forEach((id, idx) => {
      const student = studentMap[id];
      const row = `
        <tr>
          <td>${idx + 1}</td>
          <td>${student.name}</td>
          <td>${student.email}</td>
          <td><button type="button" class="btn btn-danger btn-sm" onclick="removeStudent('${id}')">Remove</button></td>
        </tr>
      `;
      tableBody.innerHTML += row;
    });
  }

  function updateHiddenInput() {
    document.getElementById("studentsEnrolledInput").value = JSON.stringify(studentList);
  }
</script>

