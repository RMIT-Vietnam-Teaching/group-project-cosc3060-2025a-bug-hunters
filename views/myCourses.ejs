<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Courses - LearnNow</title>

    <!-- Bootstrap 5 CSS CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <!-- Bootstrap Icons CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
      rel="stylesheet"
    />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/navBarStyle.css" />
    <style>
      .course-card {
        border-radius: 12px;
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
        margin-bottom: 20px;
        border: 1px solid #e0e0e0;
      }

      .course-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      }

      .course-image {
        width: 200px;
        height: 150px;
        object-fit: cover;
      }

      .course-content {
        padding: 15px;
      }

      .course-title {
        font-weight: 600;
        margin-bottom: 5px;
      }

      .progress-indicator {
        display: inline-block;
        padding: 5px 15px;
        border-radius: 20px;
        font-weight: 600;
        color: white;
        background-color: #ee6c4d;
      }

      .progress-low {
        background-color: #f8d7da;
        color: #842029;
      }

      .progress-medium {
        background-color: #fff3cd;
        color: #664d03;
      }

      .progress-high {
        background-color: #d1e7dd;
        color: #0f5132;
      }

      .learn-now-btn {
        background-color: #ee6c4d;
        color: white;
        border: none;
        border-radius: 20px;
        padding: 5px 15px;
        transition: background-color 0.3s;
      }

      .learn-now-btn:hover {
        background-color: #e95d3c;
        color: white;
      }

      .filter-btn {
        border-radius: 20px;
        margin: 0 5px;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        color: #6c757d;
        font-size: 0.9rem;
        padding: 5px 15px;
        transition: all 0.2s;
      }

      .filter-btn:hover {
        background-color: #e9ecef;
        color: #495057;
      }

      .filter-btn.active {
        background-color: #ee6c4d;
        border-color: #ee6c4d;
        color: white;
      }

      .enrolled-header {
        font-weight: 700;
        text-align: center;
        margin: 30px 0;
        font-size: 2rem;
      }

      .filters-container {
        display: flex;
        justify-content: center;
        margin-bottom: 30px;
      }

      .course-details {
        color: #6c757d;
        font-size: 0.9rem;
      }

      .course-instructor {
        font-size: 0.9rem;
        color: #495057;
        margin-bottom: 5px;
      }

      .dropdown-menu {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border: none;
        border-radius: 0.5rem;
      }

      .dropdown-item:hover {
        background-color: #f8f9fa;
      }

      .dropdown-item.active {
        background-color: #ee6c4d;
      }

      .search-box {
        position: relative;
        max-width: 300px;
        margin: 0 auto 1.5rem auto;
      }

      .search-box .form-control {
        padding-left: 2.5rem;
        border-radius: 20px;
      }

      .search-icon {
        position: absolute;
        left: 1rem;
        top: 0.6rem;
        color: #6c757d;
      }
    </style>
  </head>
  <body>
    <!--Include Nav Bar-->
    <%- include('partials/navbar') %>

    <div class="container my-5">
      <h1 class="enrolled-header">YOUR ENROLLED COURSES</h1>

      <!-- Search Box -->
      <div class="search-box mb-4">
        <i class="bi bi-search search-icon"></i>
        <input
          type="text"
          id="courseSearch"
          class="form-control"
          placeholder="Search your courses"
        />
      </div>

      <!-- Filter Buttons -->
      <div class="filters-container">
        <div class="dropdown me-2">
          <button
            class="btn filter-btn dropdown-toggle"
            type="button"
            id="sortDropdown"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <i class="bi bi-sort-down me-1"></i> Sort By
          </button>
          <ul class="dropdown-menu" aria-labelledby="sortDropdown">
            <li>
              <a class="dropdown-item active" href="#" data-sort="recent"
                >Recently Enrolled</a
              >
            </li>
            <li>
              <a class="dropdown-item" href="#" data-sort="oldest"
                >Oldest First</a
              >
            </li>
            <li>
              <a class="dropdown-item" href="#" data-sort="name">Course Name</a>
            </li>
            <li>
              <a class="dropdown-item" href="#" data-sort="progress-high"
                >Highest Progress</a
              >
            </li>
            <li>
              <a class="dropdown-item" href="#" data-sort="progress-low"
                >Lowest Progress</a
              >
            </li>
          </ul>
        </div>

        <button class="btn filter-btn active" data-filter="all">
          All Courses
        </button>
        <button class="btn filter-btn" data-filter="in-progress">
          In Progress
        </button>
        <button class="btn filter-btn" data-filter="completed">
          Completed
        </button>
        <button class="btn filter-btn" data-filter="not-started">
          Not Started
        </button>
      </div>

      <!-- Enrolled Courses List -->
      <div class="enrolled-courses" id="enrolledCoursesList">
        <% if (enrolledCourses && enrolledCourses.length > 0) { %> <%
        enrolledCourses.forEach(course => { %>
        <!-- Course Card -->
        <div
          class="course-card"
          data-name="<%= course.title.toLowerCase() %>"
          data-category="<%= course.category ? course.category.toLowerCase() : '' %>"
          data-progress="<%= course.progress %>"
          data-progress-status="<%= course.progress === 100 ? 'completed' : course.progress > 0 ? 'in-progress' : 'not-started' %>"
        >
          <div class="row g-0">
            <div class="col-md-3">
              <img
                src="<%= course.imageUrl || 'images/course-placeholder.jpg' %>"
                class="course-image"
                alt="<%= course.title %>"
              />
            </div>
            <div class="col-md-7">
              <div class="course-content">
                <h5 class="course-title"><%= course.title %></h5>
                <p class="course-instructor">
                  Created by: <%= course.instructor %>
                </p>
                <p class="course-description">
                  <%= course.description.substring(0, 100) %><%=
                  course.description.length > 100 ? '...' : '' %>
                </p>
                <div class="course-details">
                  <div class="mb-2">
                    <i class="bi bi-clock me-2"></i><%= course.duration || '350 hours' %>
                  </div>
                </div>

                  <div>
                    <i class="bi bi-star-fill me-2"></i><%= course.rating ||
                    '4.7' %> (<%= course.reviews || '10,000' %>)
                  </div>
                </div>
              </div>
            </div>
            <div
              class="col-md-2 d-flex flex-column justify-content-center align-items-center"
            >
              <div
                class="progress-indicator <%= course.progress < 20 ? 'progress-low' : course.progress < 70 ? 'progress-medium' : 'progress-high' %>"
              >
                <%= course.progress %>%
              </div>
              <a
                href="/courses/<%= course._id %>/learn"
                class="btn learn-now-btn mt-3"
                >Learn Now</a
              >
            </div>
          </div>
        </div>
        <% }); %> <% } else { %>
        <!-- No enrolled courses message -->
        <div class="text-center py-5" id="noCourses">
          <i class="bi bi-journal-bookmark display-1 text-muted"></i>
          <h3 class="mt-4">You haven't enrolled in any courses yet</h3>
          <p class="text-muted">
            Explore our catalog and find courses that match your interests
          </p>
          <a href="/courses" class="btn btn-lg learn-now-btn mt-3"
            >Browse Courses</a
          >
        </div>
        <% } %>
      </div>
    </div>



    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Course filtering and sorting script -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Sample enrolled courses data (remove this in production)
        const sampleCourses = [
          {
            _id: "1",
            title: "Introduction to Cybersecurity",
            instructor: "Dr. Alina Prest",
            description:
              "Kickstart your career in cybersecurity â€“ start with the essentials!",
            duration: "350 hours",
            rating: "4.7",
            reviews: "10,000",
            progress: 100,
            category: "Cybersecurity",
            imageUrl: "images/cybersecurity.jpg",
            enrollmentDate: new Date("2023-12-01"),
          },
          {
            _id: "2",
            title: "Data Science 101",
            instructor: "Dr. Alina Prest",
            description:
              "Learn how to analyze and visualize data using the latest techniques and tools.",
            duration: "350 hours",
            rating: "4.7",
            reviews: "10,000",
            progress: 20,
            category: "Data Science",
            imageUrl: "images/data-science.jpg",
            enrollmentDate: new Date("2024-01-15"),
          },
          {
            _id: "3",
            title: "Advanced Physics - Course 2",
            instructor: "Dr. Alina Prest",
            description:
              "Dive into quantum mechanics, relativity, and advanced theoretical concepts.",
            duration: "350 hours",
            rating: "4.7",
            reviews: "10,000",
            progress: 5,
            category: "Science",
            imageUrl: "images/physics.jpg",
            enrollmentDate: new Date("2024-02-20"),
          },
          {
            _id: "4",
            title: "Web Development Bootcamp",
            instructor: "John Smith",
            description:
              "Become a full-stack web developer with HTML, CSS, JavaScript, and more.",
            duration: "280 hours",
            rating: "4.9",
            reviews: "8,500",
            progress: 0,
            category: "Web Development",
            imageUrl: "images/web-dev.jpg",
            enrollmentDate: new Date("2024-03-05"),
          },
          {
            _id: "5",
            title: "Digital Marketing Essentials",
            instructor: "Sarah Johnson",
            description:
              "Master SEO, social media marketing, email campaigns, and analytics.",
            duration: "200 hours",
            rating: "4.6",
            reviews: "5,200",
            progress: 85,
            category: "Marketing",
            imageUrl: "images/marketing.jpg",
            enrollmentDate: new Date("2024-01-10"),
          },
        ];

        // Only run this code if there are no real enrolled courses
        const enrolledCoursesDiv = document.getElementById(
          "enrolledCoursesList"
        );
        const noCoursesDiv = document.getElementById("noCourses");

        if (noCoursesDiv) {
          // Clear the "no courses" message
          enrolledCoursesDiv.innerHTML = "";

          // Create HTML for sample courses
          sampleCourses.forEach((course) => {
            const progressClass =
              course.progress < 20
                ? "progress-low"
                : course.progress < 70
                ? "progress-medium"
                : "progress-high";
            const progressStatus =
              course.progress === 100
                ? "completed"
                : course.progress > 0
                ? "in-progress"
                : "not-started";

            const courseHTML = `
            <div class="course-card" 
                 data-name="${course.title.toLowerCase()}"
                 data-category="${course.category.toLowerCase()}"
                 data-progress="${course.progress}"
                 data-progress-status="${progressStatus}"
                 data-enrollment-date="${course.enrollmentDate.toISOString()}">
              <div class="row g-0">
                <div class="col-md-3">
                  <img src="${course.imageUrl}" class="course-image" alt="${
              course.title
            }">
                </div>
                <div class="col-md-7">
                  <div class="course-content">
                    <h5 class="course-title">${course.title}</h5>
                    <p class="course-instructor">Created by: ${
                      course.instructor
                    }</p>
                    <p class="course-description">
                      ${course.description}
                    </p>
                    <div class="course-details">
                      <div class="mb-2">
                        <i class="bi bi-clock me-2"></i>${course.duration}
                      </div>
                      <div>
                        <i class="bi bi-star-fill me-2"></i>${course.rating} (${
              course.reviews
            })
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-md-2 d-flex flex-column justify-content-center align-items-center">
                  <div class="progress-indicator ${progressClass}">
                    ${course.progress}%
                  </div>
                  <a href="/courses/${
                    course._id
                  }/learn" class="btn learn-now-btn mt-3">Learn Now</a>
                </div>
              </div>
            </div>
          `;

            enrolledCoursesDiv.innerHTML += courseHTML;
          });
        }

        // Get all course cards
        const courseCards = document.querySelectorAll(".course-card");

        // Filter buttons functionality
        const filterButtons = document.querySelectorAll(
          ".filter-btn[data-filter]"
        );
        filterButtons.forEach((button) => {
          button.addEventListener("click", () => {
            // Remove active class from all filter buttons
            filterButtons.forEach((btn) => btn.classList.remove("active"));
            // Add active class to clicked button
            button.classList.add("active");

            const filterValue = button.getAttribute("data-filter");

            // Show all courses if filter is 'all'
            if (filterValue === "all") {
              courseCards.forEach((card) => {
                card.style.display = "";
              });
            } else {
              // Hide all courses
              courseCards.forEach((card) => {
                card.style.display = "none";
              });

              // Show only courses that match the filter
              document
                .querySelectorAll(
                  `.course-card[data-progress-status="${filterValue}"]`
                )
                .forEach((card) => {
                  card.style.display = "";
                });
            }
          });
        });

        // Sort dropdown functionality
        const sortOptions = document.querySelectorAll(
          ".dropdown-item[data-sort]"
        );
        sortOptions.forEach((option) => {
          option.addEventListener("click", (e) => {
            e.preventDefault();

            // Remove active class from all sort options
            sortOptions.forEach((opt) => opt.classList.remove("active"));
            // Add active class to clicked option
            option.classList.add("active");

            // Update dropdown button text
            document.getElementById(
              "sortDropdown"
            ).innerHTML = `<i class="bi bi-sort-down me-1"></i> ${option.textContent}`;

            const sortValue = option.getAttribute("data-sort");
            const cardsArray = Array.from(courseCards);

            // Sort cards based on selected option
            switch (sortValue) {
              case "recent":
                cardsArray.sort((a, b) => {
                  const dateA = new Date(
                    a.getAttribute("data-enrollment-date") || 0
                  );
                  const dateB = new Date(
                    b.getAttribute("data-enrollment-date") || 0
                  );
                  return dateB - dateA;
                });
                break;
              case "oldest":
                cardsArray.sort((a, b) => {
                  const dateA = new Date(
                    a.getAttribute("data-enrollment-date") || 0
                  );
                  const dateB = new Date(
                    b.getAttribute("data-enrollment-date") || 0
                  );
                  return dateA - dateB;
                });
                break;
              case "name":
                cardsArray.sort((a, b) => {
                  const nameA = a.getAttribute("data-name");
                  const nameB = b.getAttribute("data-name");
                  return nameA.localeCompare(nameB);
                });
                break;
              case "progress-high":
                cardsArray.sort((a, b) => {
                  const progressA = parseInt(
                    a.getAttribute("data-progress") || 0
                  );
                  const progressB = parseInt(
                    b.getAttribute("data-progress") || 0
                  );
                  return progressB - progressA;
                });
                break;
              case "progress-low":
                cardsArray.sort((a, b) => {
                  const progressA = parseInt(
                    a.getAttribute("data-progress") || 0
                  );
                  const progressB = parseInt(
                    b.getAttribute("data-progress") || 0
                  );
                  return progressA - progressB;
                });
                break;
            }

            // Re-append cards in the new order
            const container = document.getElementById("enrolledCoursesList");
            cardsArray.forEach((card) => {
              container.appendChild(card);
            });
          });
        });

        // Search functionality
        const searchInput = document.getElementById("courseSearch");
        searchInput.addEventListener("input", () => {
          const searchTerm = searchInput.value.toLowerCase().trim();

          courseCards.forEach((card) => {
            const title = card.getAttribute("data-name");
            const category = card.getAttribute("data-category");
            const description = card
              .querySelector(".course-description")
              .textContent.toLowerCase();
            const instructor = card
              .querySelector(".course-instructor")
              .textContent.toLowerCase();

            // Check if course matches search term
            if (
              title.includes(searchTerm) ||
              category.includes(searchTerm) ||
              description.includes(searchTerm) ||
              instructor.includes(searchTerm)
            ) {
              card.style.display = "";
            } else {
              card.style.display = "none";
            }
          });
        });
      });
    </script>
  </body>
</html>
